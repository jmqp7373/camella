<?php
/**
 * Script de prueba para verificar el funcionamiento del modelo de categor√≠as
 * Ejecutar desde navegador: /test_categorias.php
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üß™ Prueba del Sistema de Categor√≠as</h1>";
echo "<style>body { font-family: Arial, sans-serif; margin: 2rem; } .success { color: green; } .error { color: red; } .info { color: blue; }</style>";

try {
    echo "<h2>1. Cargando modelo de categor√≠as...</h2>";
    require_once 'models/Categorias.php';
    echo "<p class='success'>‚úÖ Modelo cargado exitosamente</p>";
    
    echo "<h2>2. Inicializando modelo...</h2>";
    $categoriasModel = new Categorias();
    echo "<p class='success'>‚úÖ Modelo inicializado exitosamente</p>";
    
    echo "<h2>3. Verificando estado del sistema...</h2>";
    $estado = $categoriasModel->verificarEstadoTablasYDatos();
    
    echo "<div style='background: #f5f5f5; padding: 1rem; border-radius: 5px;'>";
    echo "<pre>" . print_r($estado, true) . "</pre>";
    echo "</div>";
    
    if ($estado['tablas_existen']) {
        echo "<p class='success'>‚úÖ Las tablas existen</p>";
    } else {
        echo "<p class='error'>‚ùå Las tablas no existen</p>";
    }
    
    if ($estado['datos_inicializados']) {
        echo "<p class='success'>‚úÖ Los datos est√°n inicializados</p>";
    } else {
        echo "<p class='info'>‚ÑπÔ∏è Los datos no est√°n inicializados (se crear√°n autom√°ticamente)</p>";
    }
    
    echo "<h2>4. Obteniendo categor√≠as con oficios...</h2>";
    $categorias = $categoriasModel->obtenerCategoriasConOficios();
    
    if (!empty($categorias)) {
        echo "<p class='success'>‚úÖ Se encontraron " . count($categorias) . " categor√≠as</p>";
        
        echo "<h3>üìã Lista de Categor√≠as y Oficios:</h3>";
        foreach ($categorias as $categoria) {
            echo "<div style='border: 1px solid #ddd; margin: 1rem 0; padding: 1rem; border-radius: 5px;'>";
            echo "<h4>" . $categoria['icono'] . " " . htmlspecialchars($categoria['nombre']) . "</h4>";
            
            if (!empty($categoria['oficios'])) {
                echo "<ul>";
                foreach ($categoria['oficios'] as $oficio) {
                    echo "<li>" . htmlspecialchars($oficio['nombre']) . "</li>";
                }
                echo "</ul>";
            } else {
                echo "<p><em>No hay oficios en esta categor√≠a</em></p>";
            }
            echo "</div>";
        }
    } else {
        echo "<p class='error'>‚ùå No se encontraron categor√≠as</p>";
    }
    
    echo "<h2>5. Probando API de categor√≠as simples...</h2>";
    $categoriasSimples = $categoriasModel->obtenerCategoriasSimple();
    
    if (!empty($categoriasSimples)) {
        echo "<p class='success'>‚úÖ Se encontraron " . count($categoriasSimples) . " categor√≠as simples</p>";
        echo "<ul>";
        foreach ($categoriasSimples as $cat) {
            echo "<li>" . $cat['icono'] . " " . htmlspecialchars($cat['nombre']) . " (ID: " . $cat['id'] . ")</li>";
        }
        echo "</ul>";
    } else {
        echo "<p class='error'>‚ùå No se encontraron categor√≠as simples</p>";
    }
    
    echo "<h2>6. Probando obtenci√≥n de oficios por categor√≠a...</h2>";
    if (!empty($categoriasSimples)) {
        $primeraCategoria = $categoriasSimples[0];
        $oficios = $categoriasModel->obtenerOficiosPorCategoria($primeraCategoria['id']);
        
        echo "<p class='info'>Obteniendo oficios de: " . $primeraCategoria['nombre'] . "</p>";
        
        if (!empty($oficios)) {
            echo "<p class='success'>‚úÖ Se encontraron " . count($oficios) . " oficios</p>";
            echo "<ul>";
            foreach ($oficios as $oficio) {
                echo "<li>" . htmlspecialchars($oficio['nombre']) . " (ID: " . $oficio['id'] . ")</li>";
            }
            echo "</ul>";
        } else {
            echo "<p class='error'>‚ùå No se encontraron oficios para esta categor√≠a</p>";
        }
    }
    
    echo "<h2>üéâ Pruebas completadas exitosamente</h2>";
    echo "<div style='background: #d4edda; border: 1px solid #c3e6cb; padding: 1rem; border-radius: 5px; color: #155724;'>";
    echo "<strong>‚úÖ El sistema de categor√≠as est√° funcionando correctamente</strong><br>";
    echo "Total de categor√≠as: " . count($categorias) . "<br>";
    echo "Total de oficios: " . array_sum(array_map(function($cat) { return count($cat['oficios']); }, $categorias)) . "<br>";
    echo "Las tablas se crearon autom√°ticamente y los datos iniciales se insertaron correctamente.";
    echo "</div>";
    
    echo "<hr>";
    echo "<h3>üîó Enlaces √∫tiles:</h3>";
    echo "<ul>";
    echo "<li><a href='index.php'>Ver p√°gina principal</a></li>";
    echo "<li><a href='index.php?view=admin'>Panel de administraci√≥n</a></li>";
    echo "<li><a href='index.php?api=categorias'>API de categor√≠as (JSON)</a></li>";
    echo "</ul>";
    
} catch (Exception $e) {
    echo "<h2 class='error'>‚ùå Error durante las pruebas</h2>";
    echo "<div style='background: #f8d7da; border: 1px solid #f5c6cb; padding: 1rem; border-radius: 5px; color: #721c24;'>";
    echo "<strong>Error:</strong> " . $e->getMessage() . "<br>";
    echo "<strong>Archivo:</strong> " . $e->getFile() . "<br>";
    echo "<strong>L√≠nea:</strong> " . $e->getLine();
    echo "</div>";
    
    echo "<h3>üîß Posibles soluciones:</h3>";
    echo "<ul>";
    echo "<li>Verificar que la configuraci√≥n de base de datos en <code>config/config.php</code> sea correcta</li>";
    echo "<li>Verificar que la base de datos <code>camella_db</code> exista</li>";
    echo "<li>Verificar que el usuario <code>camella_user</code> tenga permisos suficientes</li>";
    echo "<li>Verificar que el servidor MySQL est√© ejecut√°ndose</li>";
    echo "</ul>";
}
?>

<script>
// Auto-refrescar cada 30 segundos para ver cambios
setTimeout(function() {
    const refresh = confirm('¬øDesea refrescar la p√°gina para ver si hay cambios?');
    if (refresh) {
        location.reload();
    }
}, 30000);
</script>